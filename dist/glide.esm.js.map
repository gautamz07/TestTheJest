{"version":3,"file":"glide.esm.js","sources":["../src/defaults.js","../src/utils/log.js","../src/utils/unit.js","../src/core/index.js","../src/utils/object.js","../src/core/event/events-bus.js","../src/index.js","../src/components/run.js","../src/utils/time.js","../src/utils/wait.js","../src/components/gaps.js","../src/utils/dom.js","../src/components/html.js","../src/components/peek.js","../src/components/move.js","../src/components/sizes.js","../src/components/build.js","../src/components/clones.js","../src/core/event/events-binder.js","../src/components/resize.js","../src/components/direction.js","../src/mutator/transformers/rtl.js","../src/mutator/transformers/gap.js","../src/mutator/transformers/grow.js","../src/mutator/transformers/peeking.js","../src/mutator/transformers/focusing.js","../src/mutator/index.js","../src/components/translate.js","../src/components/transition.js","../src/components/swipe.js","../src/components/images.js","../src/components/anchors.js","../src/components/controls.js","../src/components/keyboard.js","../src/components/autoplay.js","../src/components/breakpoints.js","../entry/entry-complete.js"],"sourcesContent":["export default {\r\n  /**\r\n   * Type of the movement.\r\n   *\r\n   * Available types:\r\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\r\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\r\n   *\r\n   * @type {String}\r\n   */\r\n  type: 'slider',\r\n\r\n  /**\r\n   * Start at specific slide number defined with zero-based index.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  startAt: 0,\r\n\r\n  /**\r\n   * A number of slides visible on the single viewport.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  perView: 1,\r\n\r\n  /**\r\n   * Focus currently active slide at a specified position in the track.\r\n   *\r\n   * Available inputs:\r\n   * `center` - Current slide will be always focused at the center of a track.\r\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\r\n   *\r\n   * @type {String|Number}\r\n   */\r\n  focusAt: 0,\r\n\r\n  /**\r\n   * A size of the gap added between slides.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  gap: 10,\r\n\r\n  /**\r\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\r\n   *\r\n   * @type {Number|Boolean}\r\n   */\r\n  autoplay: false,\r\n\r\n  /**\r\n   * Stop autoplay on mouseover event.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  hoverpause: true,\r\n\r\n  /**\r\n   * Allow for changing slides with left and right keyboard arrows.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  keyboard: true,\r\n\r\n  /**\r\n   * Stop running `perView` number of slides from the end. Use this\r\n   * option if you don't want to have an empty space after\r\n   * a slider. Works only with `slider` type and a\r\n   * non-centered `focusAt` setting.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  bound: false,\r\n\r\n  /**\r\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\r\n   *\r\n   * @type {Number|Boolean}\r\n   */\r\n  swipeThreshold: 80,\r\n\r\n  /**\r\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\r\n   *\r\n   * @type {Number|Boolean}\r\n   */\r\n  dragThreshold: 120,\r\n\r\n  /**\r\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\r\n   *\r\n   * @type {Number|Boolean}\r\n   */\r\n  perTouch: false,\r\n\r\n  /**\r\n   * Moving distance ratio of the slides on a swiping and dragging.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  touchRatio: 0.5,\r\n\r\n  /**\r\n   * Angle required to activate slides moving on swiping or dragging.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  touchAngle: 45,\r\n\r\n  /**\r\n   * Duration of the animation in milliseconds.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  animationDuration: 400,\r\n\r\n  /**\r\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  rewind: true,\r\n\r\n  /**\r\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  rewindDuration: 800,\r\n\r\n  /**\r\n   * Easing function for the animation.\r\n   *\r\n   * @type {String}\r\n   */\r\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\r\n\r\n  /**\r\n   * Throttle costly events at most once per every wait milliseconds.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  throttle: 10,\r\n\r\n  /**\r\n   * Moving direction mode.\r\n   *\r\n   * Available inputs:\r\n   * - 'ltr' - left to right movement,\r\n   * - 'rtl' - right to left movement.\r\n   *\r\n   * @type {String}\r\n   */\r\n  direction: 'ltr',\r\n\r\n  /**\r\n   * The distance value of the next and previous viewports which\r\n   * have to peek in the current view. Accepts number and\r\n   * pixels as a string. Left and right peeking can be\r\n   * set up separately with a directions object.\r\n   *\r\n   * For example:\r\n   * `100` - Peek 100px on the both sides.\r\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\r\n   *\r\n   * @type {Number|String|Object}\r\n   */\r\n  peek: 0,\r\n\r\n  /**\r\n   * Collection of options applied at specified media breakpoints.\r\n   * For example: display two slides per view under 800px.\r\n   * `{\r\n   *   '800px': {\r\n   *     perView: 2\r\n   *   }\r\n   * }`\r\n   */\r\n  breakpoints: {},\r\n\r\n  /**\r\n   * Collection of internally used HTML classes.\r\n   *\r\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\r\n   * @type {Object}\r\n   */\r\n  classes: {\r\n    direction: {\r\n      ltr: 'glide--ltr',\r\n      rtl: 'glide--rtl'\r\n    },\r\n    slider: 'glide--slider',\r\n    carousel: 'glide--carousel',\r\n    swipeable: 'glide--swipeable',\r\n    dragging: 'glide--dragging',\r\n    cloneSlide: 'glide__slide--clone',\r\n    activeNav: 'glide__bullet--active',\r\n    activeSlide: 'glide__slide--active',\r\n    disabledArrow: 'glide__arrow--disabled'\r\n  }\r\n}\r\n","/**\r\n * Outputs warning message to the bowser console.\r\n *\r\n * @param  {String} msg\r\n * @return {Void}\r\n */\r\nexport function warn (msg) {\r\n  console.error(`[Glide warn]: ${msg}`)\r\n}\r\n","/**\r\n * Converts value entered as number\r\n * or string to integer value.\r\n *\r\n * @param {String} value\r\n * @returns {Number}\r\n */\r\nexport function toInt (value) {\r\n  return parseInt(value)\r\n}\r\n\r\n/**\r\n * Converts value entered as number\r\n * or string to flat value.\r\n *\r\n * @param {String} value\r\n * @returns {Number}\r\n */\r\nexport function toFloat (value) {\r\n  return parseFloat(value)\r\n}\r\n\r\n/**\r\n * Indicates whether the specified value is a string.\r\n *\r\n * @param  {*}   value\r\n * @return {Boolean}\r\n */\r\nexport function isString (value) {\r\n  return typeof value === 'string'\r\n}\r\n\r\n/**\r\n * Indicates whether the specified value is an object.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n *\r\n * @see https://github.com/jashkenas/underscore\r\n */\r\nexport function isObject (value) {\r\n  let type = typeof value\r\n\r\n  return type === 'function' || type === 'object' && !!value // eslint-disable-line no-mixed-operators\r\n}\r\n\r\n/**\r\n * Indicates whether the specified value is a number.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isNumber (value) {\r\n  return typeof value === 'number'\r\n}\r\n\r\n/**\r\n * Indicates whether the specified value is a function.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isFunction (value) {\r\n  return typeof value === 'function'\r\n}\r\n\r\n/**\r\n * Indicates whether the specified value is undefined.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isUndefined (value) {\r\n  return typeof value === 'undefined'\r\n}\r\n\r\n/**\r\n * Indicates whether the specified value is an array.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n */\r\nexport function isArray (value) {\r\n  return value.constructor === Array\r\n}\r\n","import { warn } from '../utils/log'\r\nimport { isFunction } from '../utils/unit'\r\n\r\n/**\r\n * Creates and initializes specified collection of extensions.\r\n * Each extension receives access to instance of glide and rest of components.\r\n *\r\n * @param {Object} glide\r\n * @param {Object} extensions\r\n *\r\n * @returns {Object}\r\n */\r\nexport function mount (glide, extensions, events) {\r\n  let components = {}\r\n\r\n  for (let name in extensions) {\r\n    if (isFunction(extensions[name])) {\r\n      components[name] = extensions[name](glide, components, events)\r\n    } else {\r\n      warn('Extension must be a function')\r\n    }\r\n  }\r\n\r\n  for (let name in components) {\r\n    if (isFunction(components[name].mount)) {\r\n      components[name].mount()\r\n    }\r\n  }\r\n\r\n  return components\r\n}\r\n","/**\r\n * Defines getter and setter property on the specified object.\r\n *\r\n * @param  {Object} obj         Object where property has to be defined.\r\n * @param  {String} prop        Name of the defined property.\r\n * @param  {Object} definition  Get and set definitions for the property.\r\n * @return {Void}\r\n */\r\nexport function define (obj, prop, definition) {\r\n  Object.defineProperty(obj, prop, definition)\r\n}\r\n\r\n/**\r\n * Sorts aphabetically object keys.\r\n *\r\n * @param  {Object} obj\r\n * @return {Object}\r\n */\r\nexport function sortKeys (obj) {\r\n  return Object.keys(obj).sort().reduce((r, k) => {\r\n    r[k] = obj[k]\r\n\r\n    return (r[k], r)\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Merges passed settings object with default options.\r\n *\r\n * @param  {Object} defaults\r\n * @param  {Object} settings\r\n * @return {Object}\r\n */\r\nexport function mergeOptions (defaults, settings) {\r\n  let options = Object.assign({}, defaults, settings)\r\n\r\n  // `Object.assign` do not deeply merge objects, so we\r\n  // have to do it manually for every nested object\r\n  // in options. Although it does not look smart,\r\n  // it's smaller and faster than some fancy\r\n  // merging deep-merge algorithm script.\r\n  if (settings.hasOwnProperty('classes')) {\r\n    options.classes = Object.assign({}, defaults.classes, settings.classes)\r\n\r\n    if (settings.classes.hasOwnProperty('direction')) {\r\n      options.classes.direction = Object.assign({}, defaults.classes.direction, settings.classes.direction)\r\n    }\r\n  }\r\n\r\n  if (settings.hasOwnProperty('breakpoints')) {\r\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints)\r\n  }\r\n\r\n  return options\r\n}\r\n","import { isArray } from '../../utils/unit'\r\n\r\nexport default class EventsBus {\r\n  /**\r\n   * Construct a EventBus instance.\r\n   *\r\n   * @param {Object} events\r\n   */\r\n  constructor (events = {}) {\r\n    this.events = events\r\n    this.hop = events.hasOwnProperty\r\n  }\r\n\r\n  /**\r\n   * Adds listener to the specifed event.\r\n   *\r\n   * @param {String|Array} event\r\n   * @param {Function} handler\r\n   */\r\n  on (event, handler) {\r\n    if (isArray(event)) {\r\n      for (let i = 0; i < event.length; i++) {\r\n        this.on(event[i], handler)\r\n      }\r\n    }\r\n\r\n    // Create the event's object if not yet created\r\n    if (!this.hop.call(this.events, event)) {\r\n      this.events[event] = []\r\n    }\r\n\r\n    // Add the handler to queue\r\n    var index = this.events[event].push(handler) - 1\r\n\r\n    // Provide handle back for removal of event\r\n    return {\r\n      remove () {\r\n        delete this.events[event][index]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Runs registered handlers for specified event.\r\n   *\r\n   * @param {String|Array} event\r\n   * @param {Object=} context\r\n   */\r\n  emit (event, context) {\r\n    if (isArray(event)) {\r\n      for (let i = 0; i < event.length; i++) {\r\n        this.emit(event[i], context)\r\n      }\r\n    }\r\n\r\n    // If the event doesn't exist, or there's no handlers in queue, just leave\r\n    if (!this.hop.call(this.events, event)) {\r\n      return\r\n    }\r\n\r\n    // Cycle through events queue, fire!\r\n    this.events[event].forEach((item) => {\r\n      item(context || {})\r\n    })\r\n  }\r\n}\r\n","import defaults from './defaults'\r\nimport { warn } from './utils/log'\r\nimport { mount } from './core/index'\r\nimport { mergeOptions } from './utils/object'\r\nimport { toInt, isObject, isArray } from './utils/unit'\r\n\r\nimport EventsBus from './core/event/events-bus'\r\n\r\nexport default class Glide {\r\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\r\n  constructor (selector, options = {}) {\r\n    this._c = {}\r\n    this._t = []\r\n    this._e = new EventsBus()\r\n\r\n    this.disabled = false\r\n    this.selector = selector\r\n    this.settings = mergeOptions(defaults, options)\r\n    this.index = this.settings.startAt\r\n  }\r\n\r\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\r\n  mount (extensions = {}) {\r\n    this._e.emit('mount.before')\r\n\r\n    if (isObject(extensions)) {\r\n      this._c = mount(this, extensions, this._e)\r\n    } else {\r\n      warn('You need to provide a object on `mount()`')\r\n    }\r\n\r\n    this._e.emit('mount.after')\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Collects an instance `translate` transformers.\r\n   *\r\n   * @param  {Array} transformers Collection of transformers.\r\n   * @return {Void}\r\n   */\r\n  mutate (transformers = []) {\r\n    if (isArray(transformers)) {\r\n      this._t = transformers\r\n    } else {\r\n      warn('You need to provide a array on `mutate()`')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Updates glide with specified settings.\r\n   *\r\n   * @param {Object} settings\r\n   * @return {Glide}\r\n   */\r\n  update (settings = {}) {\r\n    this.settings = mergeOptions(this.settings, settings)\r\n\r\n    if (settings.hasOwnProperty('startAt')) {\r\n      this.index = settings.startAt\r\n    }\r\n\r\n    this._e.emit('update')\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Change slide with specified pattern. A pattern must be in the special format:\r\n   * `>` - Move one forward\r\n   * `<` - Move one backward\r\n   * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n   * `>>` - Rewinds to end (last slide)\r\n   * `<<` - Rewinds to start (first slide)\r\n   *\r\n   * @param {String} pattern\r\n   * @return {Glide}\r\n   */\r\n  go (pattern) {\r\n    this._c.Run.make(pattern)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move track by specified distance.\r\n   *\r\n   * @param {String} distance\r\n   * @return {Glide}\r\n   */\r\n  move (distance) {\r\n    this._c.Transition.disable()\r\n    this._c.Move.make(distance)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Destroy instance and revert all changes done by this._c.\r\n   *\r\n   * @return {Glide}\r\n   */\r\n  destroy () {\r\n    this._e.emit('destroy')\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Start instance autoplaying.\r\n   *\r\n   * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n   * @return {Glide}\r\n   */\r\n  play (interval = false) {\r\n    if (interval) {\r\n      this.settings.autoplay = interval\r\n    }\r\n\r\n    this._e.emit('play')\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Stop instance autoplaying.\r\n   *\r\n   * @return {Glide}\r\n   */\r\n  pause () {\r\n    this._e.emit('pause')\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Sets glide into a idle status.\r\n   *\r\n   * @return {Glide}\r\n   */\r\n  disable () {\r\n    this.disabled = true\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Sets glide into a active status.\r\n   *\r\n   * @return {Glide}\r\n   */\r\n  enable () {\r\n    this.disabled = false\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Adds cuutom event listener with handler.\r\n   *\r\n   * @param  {String|Array} event\r\n   * @param  {Function} handler\r\n   * @return {Glide}\r\n   */\r\n  on (event, handler) {\r\n    this._e.on(event, handler)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Checks if glide is a precised type.\r\n   *\r\n   * @param  {String} name\r\n   * @return {Boolean}\r\n   */\r\n  isType (name) {\r\n    return this.settings.type === name\r\n  }\r\n\r\n  /**\r\n   * Gets value of the core options.\r\n   *\r\n   * @return {Object}\r\n   */\r\n  get settings () {\r\n    return this._o\r\n  }\r\n\r\n  /**\r\n   * Sets value of the core options.\r\n   *\r\n   * @param  {Object} o\r\n   * @return {Void}\r\n   */\r\n  set settings (o) {\r\n    if (isObject(o)) {\r\n      this._o = o\r\n    } else {\r\n      warn('Options must be an `object` instance.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets current index of the slider.\r\n   *\r\n   * @return {Object}\r\n   */\r\n  get index () {\r\n    return this._i\r\n  }\r\n\r\n  /**\r\n   * Sets current index a slider.\r\n   *\r\n   * @return {Object}\r\n   */\r\n  set index (i) {\r\n    this._i = toInt(i)\r\n  }\r\n\r\n  /**\r\n   * Gets type name of the slider.\r\n   *\r\n   * @return {String}\r\n   */\r\n  get type () {\r\n    return this.settings.type\r\n  }\r\n\r\n  /**\r\n   * Gets value of the idle status.\r\n   *\r\n   * @return {Boolean}\r\n   */\r\n  get disabled () {\r\n    return this._d\r\n  }\r\n\r\n  /**\r\n   * Sets value of the idle status.\r\n   *\r\n   * @return {Boolean}\r\n   */\r\n  set disabled (status) {\r\n    this._d = !!status\r\n  }\r\n}\r\n","import { define } from '../utils/object'\r\nimport { toInt, isNumber } from '../utils/unit'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  const Run = {\r\n    /**\r\n     * Initializes autorunning of the glide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n      console.log('mounted from run');\r\n\r\n      this._o = false\r\n    },\r\n\r\n    /**\r\n     * Makes glides running based on the passed moving schema.\r\n     *\r\n     * @param {String} move\r\n     */\r\n    make (move) {\r\n      if (!Glide.disabled) {\r\n        Glide.disable()\r\n\r\n        this.move = move\r\n\r\n        Events.emit('run.before', this.move)\r\n\r\n        this.calculate()\r\n\r\n        Events.emit('run', this.move)\r\n\r\n        Components.Transition.after(() => {\r\n          if (this.isOffset('<') || this.isOffset('>')) {\r\n            this._o = false\r\n\r\n            Events.emit('run.offset', this.move)\r\n          }\r\n\r\n          Events.emit('run.after', this.move)\r\n\r\n          Glide.enable()\r\n        })\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Calculates current index based on defined move.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    calculate () {\r\n      let { move, length } = this\r\n      let { steps, direction } = move\r\n\r\n      let countableSteps = (isNumber(toInt(steps))) && (toInt(steps) !== 0)\r\n\r\n      switch (direction) {\r\n        case '>':\r\n          if (steps === '>') {\r\n            Glide.index = length\r\n          } else if (this.isEnd()) {\r\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\r\n              this._o = true\r\n\r\n              Glide.index = 0\r\n            }\r\n\r\n            Events.emit('run.end', move)\r\n          } else if (countableSteps) {\r\n            Glide.index += Math.min(length - Glide.index, -toInt(steps))\r\n          } else {\r\n            Glide.index++\r\n          }\r\n          break\r\n\r\n        case '<':\r\n          if (steps === '<') {\r\n            Glide.index = 0\r\n          } else if (this.isStart()) {\r\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\r\n              this._o = true\r\n\r\n              Glide.index = length\r\n            }\r\n\r\n            Events.emit('run.start', move)\r\n          } else if (countableSteps) {\r\n            Glide.index -= Math.min(Glide.index, toInt(steps))\r\n          } else {\r\n            Glide.index--\r\n          }\r\n          break\r\n\r\n        case '=':\r\n          Glide.index = steps\r\n          break\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Checks if we are on the first slide.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isStart () {\r\n      return Glide.index === 0\r\n    },\r\n\r\n    /**\r\n     * Checks if we are on the last slide.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isEnd () {\r\n      return Glide.index === this.length\r\n    },\r\n\r\n    /**\r\n     * Checks if we are making a offset run.\r\n     *\r\n     * @param {String} direction\r\n     * @return {Boolean}\r\n     */\r\n    isOffset (direction) {\r\n      return this._o && this.move.direction === direction\r\n    }\r\n  }\r\n\r\n  define(Run, 'move', {\r\n    /**\r\n     * Gets value of the move schema.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    get () {\r\n      return this._m\r\n    },\r\n\r\n    /**\r\n     * Sets value of the move schema.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    set (value) {\r\n      this._m = {\r\n        direction: value.substr(0, 1),\r\n        steps: value.substr(1) ? value.substr(1) : 0\r\n      }\r\n    }\r\n  })\r\n\r\n  define(Run, 'length', {\r\n    /**\r\n     * Gets value of the running distance based\r\n     * on zero-indexing number of slides.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      let { settings } = Glide\r\n      let { length } = Components.Html.slides\r\n\r\n      // While number of slides inside instance is smaller\r\n      // that `perView` settings we should't run at all.\r\n      // Running distance has to be zero.\r\n      if (settings.perView > length) {\r\n        return 0\r\n      }\r\n\r\n      // If the `bound` option is acitve, a maximum running distance should be\r\n      // reduced by `perView` and `focusAt` settings. Running distance\r\n      // should end before creating an empty space after instance.\r\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\r\n        return (length - 1) - (toInt(settings.perView) - 1) + toInt(settings.focusAt)\r\n      }\r\n\r\n      return length - 1\r\n    }\r\n  })\r\n\r\n  define(Run, 'offset', {\r\n    /**\r\n     * Gets status of the offsetting flag.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    get () {\r\n      return this._o\r\n    }\r\n  })\r\n\r\n  return Run\r\n}\r\n","/**\r\n * Returns a current time.\r\n *\r\n * @return {Number}\r\n */\r\nexport function now () {\r\n  return new Date().getTime()\r\n}\r\n","import { now } from './time'\r\n\r\n/**\r\n * Returns a function, that, when invoked, will only be triggered\r\n * at most once during a given window of time.\r\n *\r\n * @param {Function} func\r\n * @param {Number} wait\r\n * @param {Object=} options\r\n * @return {Function}\r\n *\r\n * @see https://github.com/jashkenas/underscore\r\n */\r\nexport function throttle (func, wait, options) {\r\n  let timeout, context, args, result\r\n  let previous = 0\r\n  if (!options) options = {}\r\n\r\n  let later = function () {\r\n    previous = options.leading === false ? 0 : now()\r\n    timeout = null\r\n    result = func.apply(context, args)\r\n    if (!timeout) context = args = null\r\n  }\r\n\r\n  let throttled = function () {\r\n    let at = now()\r\n    if (!previous && options.leading === false) previous = at\r\n    let remaining = wait - (at - previous)\r\n    context = this\r\n    args = arguments\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout)\r\n        timeout = null\r\n      }\r\n      previous = at\r\n      result = func.apply(context, args)\r\n      if (!timeout) context = args = null\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining)\r\n    }\r\n    return result\r\n  }\r\n\r\n  throttled.cancel = function () {\r\n    clearTimeout(timeout)\r\n    previous = 0\r\n    timeout = context = args = null\r\n  }\r\n\r\n  return throttled\r\n}\r\n","import { toInt } from '../utils/unit'\r\nimport { define } from '../utils/object'\r\nimport { throttle } from '../utils/wait'\r\n\r\nconst MARGIN_TYPE = {\r\n  ltr: ['marginLeft', 'marginRight'],\r\n  rtl: ['marginRight', 'marginLeft']\r\n}\r\n\r\nexport default function (Glide, Components, Events) {\r\n\r\n  console.log('mounted from gaps');\r\n\r\n  const Gaps = {\r\n    /**\r\n     * Applies gaps between slides. First and last\r\n     * slides do not receive it's edge margins.\r\n     *\r\n     * @param {HTMLCollection} slides\r\n     * @return {Void}\r\n     */\r\n    apply (slides) {\r\n      for (let i = 0, len = slides.length; i < len; i++) {\r\n        let style = slides[i].style\r\n        let direction = Components.Direction.value\r\n\r\n        if (i !== 0) {\r\n          style[MARGIN_TYPE[direction][0]] = `${this.value / 2}px`\r\n        } else {\r\n          style[MARGIN_TYPE[direction][0]] = ''\r\n        }\r\n\r\n        if (i !== slides.length - 1) {\r\n          style[MARGIN_TYPE[direction][1]] = `${this.value / 2}px`\r\n        } else {\r\n          style[MARGIN_TYPE[direction][1]] = ''\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes gaps from the slides.\r\n     *\r\n     * @param {HTMLCollection} slides\r\n     * @returns {Void}\r\n    */\r\n    remove (slides) {\r\n      for (let i = 0, len = slides.length; i < len; i++) {\r\n        let style = slides[i].style\r\n\r\n        style.marginLeft = ''\r\n        style.marginRight = ''\r\n      }\r\n    }\r\n  }\r\n\r\n  define(Gaps, 'value', {\r\n    /**\r\n     * Gets value of the gap.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get () {\r\n      return toInt(Glide.settings.gap)\r\n    }\r\n  })\r\n\r\n  define(Gaps, 'grow', {\r\n    /**\r\n     * Gets additional dimentions value caused by gaps.\r\n     * Used to increase width of the slides wrapper.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get () {\r\n      return Gaps.value * (Components.Sizes.length - 1)\r\n    }\r\n  })\r\n\r\n  define(Gaps, 'reductor', {\r\n    /**\r\n     * Gets reduction value caused by gaps.\r\n     * Used to subtract width of the slides.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get () {\r\n      let perView = Glide.settings.perView\r\n\r\n      return (Gaps.value * (perView - 1)) / perView\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Apply calculated gaps:\r\n   * - after building, so slides (including clones) will receive proper margins\r\n   * - on updating via API, to recalculate gaps with new options\r\n   */\r\n  Events.on(['build.after', 'update'], throttle(() => {\r\n    Gaps.apply(Components.Html.wrapper.children)\r\n  }, 30))\r\n\r\n  /**\r\n   * Remove gaps:\r\n   * - on destroying to bring markup to its inital state\r\n   */\r\n  Events.on('destroy', () => {\r\n    Gaps.remove(Components.Html.wrapper.children)\r\n  })\r\n\r\n  return Gaps\r\n}\r\n","/**\r\n * Finds siblings nodes of the passed node.\r\n *\r\n * @param  {Element} node\r\n * @return {Array}\r\n */\r\nexport function siblings (node) {\r\n  if (node && node.parentNode) {\r\n    let n = node.parentNode.firstChild\r\n    let matched = []\r\n\r\n    for (; n; n = n.nextSibling) {\r\n      if (n.nodeType === 1 && n !== node) {\r\n        matched.push(n)\r\n      }\r\n    }\r\n\r\n    return matched\r\n  }\r\n\r\n  return []\r\n}\r\n\r\n/**\r\n * Checks if passed node exist and is a valid element.\r\n *\r\n * @param  {Element} node\r\n * @return {Boolean}\r\n */\r\nexport function exist (node) {\r\n  if (node && node instanceof window.HTMLElement) {\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n","import { warn } from '../utils/log'\r\nimport { exist } from '../utils/dom'\r\nimport { define } from '../utils/object'\r\nimport { isString } from '../utils/unit'\r\n\r\nconst TRACK_SELECTOR = '[data-glide-el=\"track\"]'\r\n\r\nexport default function (Glide, Components) {\r\n  const Html = {\r\n    /**\r\n     * Setup slider HTML nodes.\r\n     *\r\n     * @param {Glide} glide\r\n     */\r\n    mount () {\r\n\r\n      console.log('mounted from html');\r\n\r\n      this.root = Glide.selector\r\n      this.track = this.root.querySelector(TRACK_SELECTOR)\r\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter((slide) => {\r\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide)\r\n      })\r\n    }\r\n  }\r\n\r\n  // Understand : is this the equivilent of defining a method.\r\n  define(Html, 'root', {\r\n    /**\r\n     * Gets node of the glide main element.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get () {\r\n      return Html._r\r\n    },\r\n\r\n    /**\r\n     * Sets node of the glide main element.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    set (r) {\r\n      if (isString(r)) {\r\n        r = document.querySelector(r)\r\n      }\r\n\r\n      if (exist(r)) {\r\n        Html._r = r\r\n      } else {\r\n        warn('Root element must be a existing Html node')\r\n      }\r\n    }\r\n  })\r\n\r\n  define(Html, 'track', {\r\n    /**\r\n     * Gets node of the glide track with slides.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get () {\r\n      return Html._t\r\n    },\r\n\r\n    /**\r\n     * Sets node of the glide track with slides.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    set (t) {\r\n      if (exist(t)) {\r\n        Html._t = t\r\n      } else {\r\n        warn(`Could not find track element. Please use ${TRACK_SELECTOR} attribute.`)\r\n      }\r\n    }\r\n  })\r\n\r\n  define(Html, 'wrapper', {\r\n    /**\r\n     * Gets node of the slides wrapper.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get () {\r\n      return Html.track.children[0]\r\n    }\r\n  })\r\n\r\n  return Html\r\n}\r\n","import { define } from '../utils/object'\r\nimport { toInt, isObject } from '../utils/unit'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  const Peek = {\r\n    /**\r\n     * Setups how much to peek based on settings.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n      console.log('mounted from peek');\r\n      this.value = Glide.settings.peek\r\n    }\r\n  }\r\n\r\n  define(Peek, 'value', {\r\n    /**\r\n     * Gets value of the peek.\r\n     *\r\n     * @returns {Number|Object}\r\n     */\r\n    get () {\r\n      return Peek._v\r\n    },\r\n\r\n    /**\r\n     * Sets value of the peek.\r\n     *\r\n     * @param {Number|Object} value\r\n     * @return {Void}\r\n     */\r\n    set (value) {\r\n      if (isObject(value)) {\r\n        value.before = toInt(value.before)\r\n        value.after = toInt(value.after)\r\n      } else {\r\n        value = toInt(value)\r\n      }\r\n\r\n      Peek._v = value\r\n    }\r\n  })\r\n\r\n  define(Peek, 'reductor', {\r\n    /**\r\n     * Gets reduction value caused by peek.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get () {\r\n      let value = Peek.value\r\n      let perView = Glide.settings.perView\r\n\r\n      if (isObject(value)) {\r\n        return (value.before / perView) + (value.after / perView)\r\n      }\r\n\r\n      return value * 2 / perView\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Recalculate peeking sizes on:\r\n   * - when resizing window to update to proper percents\r\n   */\r\n  Events.on(['resize', 'update'], () => {\r\n    Peek.mount()\r\n  })\r\n\r\n  return Peek\r\n}\r\n","import { define } from '../utils/object'\r\nimport { toInt, isUndefined } from '../utils/unit'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  const Move = {\r\n    /**\r\n     * Constructs move component.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    mount () {\r\n      console.log('mounted from move');\r\n      this._o = 0\r\n    },\r\n\r\n    /**\r\n     * Calculates a movement value based on passed offset and currently active index.\r\n     *\r\n     * @param  {Number} offset\r\n     * @return {Void}\r\n     */\r\n    make (offset = 0) {\r\n      this.offset = offset\r\n\r\n      Events.emit('move', {\r\n        movement: this.value\r\n      })\r\n\r\n      Components.Transition.after(() => {\r\n        Events.emit('move.after', {\r\n          movement: this.value\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  define(Move, 'offset', {\r\n    /**\r\n     * Gets an offset value used to modify current translate.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get () {\r\n      return Move._o\r\n    },\r\n\r\n    /**\r\n     * Sets an offset value used to modify current translate.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    set (value) {\r\n      Move._o = !isUndefined(value) ? toInt(value) : 0\r\n    }\r\n  })\r\n\r\n  define(Move, 'translate', {\r\n    /**\r\n     * Gets a raw movement value.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      return Components.Sizes.slideWidth * Glide.index\r\n    }\r\n  })\r\n\r\n  define(Move, 'value', {\r\n    /**\r\n     * Gets an actual movement value corrected by offset.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      let offset = this.offset\r\n      let translate = this.translate\r\n\r\n      if (Components.Direction.is('rtl')) {\r\n        return translate + offset\r\n      }\r\n\r\n      return translate - offset\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Make movement to proper slide on:\r\n   * - before build, so glide will start at `startAt` index\r\n   * - on each standard run to move to newly calculated index\r\n   */\r\n  Events.on(['build.before', 'run'], () => {\r\n    Move.make()\r\n  })\r\n\r\n  return Move\r\n}\r\n","import { define } from '../utils/object'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  const Sizes = {\r\n    /**\r\n     * Setups dimentions of slides.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    setupSlides () {\r\n\r\n      console.log('mounted from sizes');\r\n\r\n      let slides = Components.Html.slides\r\n\r\n      for (let i = 0; i < slides.length; i++) {\r\n        slides[i].style.width = `${this.slideWidth}px`\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Setups dimentions of slides wrapper.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    setupWrapper (dimention) {\r\n      Components.Html.wrapper.style.width = `${this.wrapperSize}px`\r\n    },\r\n\r\n    /**\r\n     * Removes applied styles from HTML elements.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    remove () {\r\n      let slides = Components.Html.slides\r\n\r\n      for (let i = 0; i < slides.length; i++) {\r\n        slides[i].style.width = ''\r\n      }\r\n\r\n      Components.Html.wrapper.style.width = ''\r\n    }\r\n  }\r\n\r\n  define(Sizes, 'length', {\r\n    /**\r\n     * Gets count number of the slides.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      return Components.Html.slides.length\r\n    }\r\n  })\r\n\r\n  define(Sizes, 'width', {\r\n    /**\r\n     * Gets width value of the glide.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      return Components.Html.root.offsetWidth\r\n    }\r\n  })\r\n\r\n  define(Sizes, 'wrapperSize', {\r\n    /**\r\n     * Gets size of the slides wrapper.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      return (Sizes.slideWidth * Sizes.length) + Components.Gaps.grow + Components.Clones.grow\r\n    }\r\n  })\r\n\r\n  define(Sizes, 'slideWidth', {\r\n    /**\r\n     * Gets width value of the single slide.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      return (Sizes.width / Glide.settings.perView) - Components.Peek.reductor - Components.Gaps.reductor\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Apply calculated glide's dimensions:\r\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\r\n   * - when resizing window to recalculate sildes dimensions\r\n   * - on updating via API, to calculate dimensions based on new options\r\n   */\r\n  Events.on(['build.before', 'resize', 'update'], () => {\r\n    Sizes.setupSlides()\r\n    Sizes.setupWrapper()\r\n  })\r\n\r\n  /**\r\n   * Remove calculated glide's dimensions:\r\n   * - on destoting to bring markup to its inital state\r\n   */\r\n  Events.on('destroy', () => {\r\n    Sizes.remove()\r\n  })\r\n\r\n  return Sizes\r\n}\r\n","import { siblings } from '../utils/dom'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  const Build = {\r\n    /**\r\n     * Init glide building. Adds classes, sets\r\n     * dimensions and setups initial state.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n\r\n       console.log('mounted from build');\r\n\r\n\r\n      Events.emit('build.before')\r\n\r\n      this.typeClass()\r\n      this.activeClass()\r\n\r\n      Events.emit('build.after');\r\n      Events.emit('random');\r\n    },\r\n\r\n    /**\r\n     * Adds `type` class to the glide element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    typeClass () {\r\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type])\r\n    },\r\n\r\n    /**\r\n     * Sets active class to current slide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    activeClass () {\r\n      let classes = Glide.settings.classes\r\n      let slide = Components.Html.slides[Glide.index]\r\n\r\n      if (slide) {\r\n        slide.classList.add(classes.activeSlide)\r\n\r\n        siblings(slide).forEach((sibling) => {\r\n          sibling.classList.remove(classes.activeSlide)\r\n        })\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes HTML classes applied at building.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    removeClasses () {\r\n      let classes = Glide.settings.classes\r\n\r\n      Components.Html.root.classList.remove(classes[Glide.settings.type])\r\n\r\n      Components.Html.slides.forEach((sibling) => {\r\n        sibling.classList.remove(classes.activeSlide)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear building classes:\r\n   * - on destroying to bring HTML to its initial state\r\n   * - on updating to remove classes before remounting component\r\n   */\r\n  Events.on(['destroy', 'update'], () => {\r\n    Build.removeClasses()\r\n  })\r\n\r\n  /**\r\n   * Remount component:\r\n   * - on resizing of the window to calculate new dimentions\r\n   * - on updating settings via API\r\n   */\r\n  Events.on(['resize', 'update'], () => {\r\n    Build.mount()\r\n  })\r\n\r\n  /**\r\n   * Swap active class of current slide:\r\n   * - after each move to the new index\r\n   */\r\n  Events.on('move.after', () => {\r\n    Build.activeClass()\r\n  })\r\n\r\n  return Build\r\n}\r\n","import { define } from '../utils/object'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  const Clones = {\r\n    /**\r\n     * Create pattern map and collect slides to be cloned.\r\n     */\r\n    mount () {\r\n\r\n      console.log('mounted from clones');\r\n\r\n      this.items = []\r\n\r\n      if (Glide.isType('carousel')) {\r\n        this.items = this.collect()\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Collect clones with pattern.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    collect (items = []) {\r\n      let { slides } = Components.Html\r\n      let { perView, classes } = Glide.settings\r\n\r\n      let start = slides.slice(0, perView)\r\n      let end = slides.slice(-perView)\r\n\r\n      for (let r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\r\n        for (let i = 0; i < start.length; i++) {\r\n          let clone = start[i].cloneNode(true)\r\n\r\n          clone.classList.add(classes.cloneSlide)\r\n\r\n          items.push(clone)\r\n        }\r\n\r\n        for (let i = 0; i < end.length; i++) {\r\n          let clone = end[i].cloneNode(true)\r\n\r\n          clone.classList.add(classes.cloneSlide)\r\n\r\n          items.unshift(clone)\r\n        }\r\n      }\r\n\r\n      return items\r\n    },\r\n\r\n    /**\r\n     * Append cloned slides with generated pattern.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    append () {\r\n      let { items } = this\r\n      let { wrapper, slides } = Components.Html\r\n\r\n      let half = Math.floor(items.length / 2)\r\n      let prepend = items.slice(0, half).reverse()\r\n      let append = items.slice(half, items.length)\r\n\r\n      for (let i = 0; i < append.length; i++) {\r\n        wrapper.appendChild(append[i])\r\n      }\r\n\r\n      for (let i = 0; i < prepend.length; i++) {\r\n        wrapper.insertBefore(prepend[i], slides[0])\r\n      }\r\n\r\n      for (let i = 0; i < items.length; i++) {\r\n        items[i].style.width = `${Components.Sizes.slideWidth}px`\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove all cloned slides.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    remove () {\r\n      let { items } = this\r\n\r\n      for (let i = 0; i < items.length; i++) {\r\n        Components.Html.wrapper.removeChild(items[i])\r\n      }\r\n    }\r\n  }\r\n\r\n  define(Clones, 'grow', {\r\n    /**\r\n     * Gets additional dimentions value caused by clones.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Append additional slide's clones:\r\n   * - while glide's type is `carousel`\r\n   */\r\n  Events.on('update', () => {\r\n    Clones.remove()\r\n    Clones.mount()\r\n    Clones.append()\r\n  })\r\n\r\n  /**\r\n   * Append additional slide's clones:\r\n   * - while glide's type is `carousel`\r\n   */\r\n  Events.on('build.before', () => {\r\n    if (Glide.isType('carousel')) {\r\n      Clones.append()\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Remove clones HTMLElements:\r\n   * - on destroying, to bring HTML to its initial state\r\n   */\r\n  Events.on('destroy', () => {\r\n    Clones.remove()\r\n  })\r\n\r\n  return Clones\r\n}\r\n","import { isString } from '../../utils/unit'\r\n\r\nexport default class EventsBinder {\r\n  /**\r\n   * Construct a EventsBinder instance.\r\n   */\r\n  constructor (listeners = {}) {\r\n    this.listeners = listeners\r\n  }\r\n\r\n  /**\r\n   * Adds events listeners to arrows HTML elements.\r\n   *\r\n   * @param  {String|Array} events\r\n   * @param  {Element|Window|Document} el\r\n   * @param  {Function} closure\r\n   * @return {Void}\r\n   */\r\n  on (events, el, closure, capture = false) {\r\n    if (isString(events)) {\r\n      events = [events]\r\n    }\r\n\r\n    for (let i = 0; i < events.length; i++) {\r\n      this.listeners[events[i]] = closure\r\n\r\n      el.addEventListener(events[i], this.listeners[events[i]], capture)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners from arrows HTML elements.\r\n   *\r\n   * @param  {String|Array} events\r\n   * @param  {Element|Window|Document} el\r\n   * @return {Void}\r\n   */\r\n  off (events, el) {\r\n    if (isString(events)) {\r\n      events = [events]\r\n    }\r\n\r\n    for (let i = 0; i < events.length; i++) {\r\n      el.removeEventListener(events[i], this.listeners[events[i]], false)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy collected listeners.\r\n   *\r\n   * @returns {Void}\r\n   */\r\n  destroy () {\r\n    delete this.listeners\r\n  }\r\n}\r\n","import { throttle } from '../utils/wait'\r\n\r\nimport EventsBinder from '../core/event/events-binder'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  const Binder = new EventsBinder()\r\n\r\n  const Resize = {\r\n    /**\r\n     * Initializes window bindings.\r\n     */\r\n    mount () {\r\n      console.log('mounted from resize');\r\n      this.bind()\r\n    },\r\n\r\n    /**\r\n     * Binds `rezsize` listener to the window.\r\n     * It's a costly event, so we are debouncing it.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind () {\r\n      Binder.on('resize', window, throttle(() => {\r\n        Events.emit('resize')\r\n      }, Glide.settings.throttle))\r\n    },\r\n\r\n    /**\r\n     * Unbinds listeners from the window.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbind () {\r\n      Binder.off('resize', window)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove bindings from window:\r\n   * - on destroying, to remove added EventListener\r\n   */\r\n  Events.on('destroy', () => {\r\n    Resize.unbind()\r\n    Binder.destroy()\r\n  })\r\n\r\n  return Resize\r\n}\r\n","import { warn } from '../utils/log'\r\nimport { define } from '../utils/object'\r\n\r\nconst VALID_DIRECTIONS = ['ltr', 'rtl']\r\nconst FLIPED_MOVEMENTS = {\r\n  '>': '<',\r\n  '<': '>',\r\n  '=': '='\r\n}\r\n\r\nexport default function (Glide, Components, Events) {\r\n  const Direction = {\r\n    /**\r\n     * Setups gap value based on settings.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n\r\n      console.log('mounted from direction');\r\n      \r\n      this.value = Glide.settings.direction\r\n    },\r\n\r\n    /**\r\n     * Resolves pattern based on direction value\r\n     *\r\n     * @param {String} pattern\r\n     * @returns {String}\r\n     */\r\n    resolve (pattern) {\r\n      let token = pattern.slice(0, 1)\r\n\r\n      if (this.is('rtl')) {\r\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token])\r\n      }\r\n\r\n      return pattern\r\n    },\r\n\r\n    /**\r\n     * Checks value of direction mode.\r\n     *\r\n     * @param {String} direction\r\n     * @returns {Boolean}\r\n     */\r\n    is (direction) {\r\n      return this.value === direction\r\n    },\r\n\r\n    /**\r\n     * Applies direction class to the root HTML element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    addClass () {\r\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value])\r\n    },\r\n\r\n    /**\r\n     * Removes direction class from the root HTML element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    removeClass () {\r\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value])\r\n    }\r\n  }\r\n\r\n  define(Direction, 'value', {\r\n    /**\r\n     * Gets value of the direction.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get () {\r\n      return Direction._v\r\n    },\r\n\r\n    /**\r\n     * Sets value of the direction.\r\n     *\r\n     * @param {String} value\r\n     * @return {Void}\r\n     */\r\n    set (value) {\r\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\r\n        Direction._v = value\r\n      } else {\r\n        warn('Direction value must be `ltr` or `rtl`')\r\n      }\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Clear direction class:\r\n   * - on destroy to bring HTML to its initial state\r\n   * - on update to remove class before reappling bellow\r\n   */\r\n  Events.on(['destroy', 'update'], () => {\r\n    Direction.removeClass()\r\n  })\r\n\r\n  /**\r\n   * Remount component:\r\n   * - on update to reflect changes in direction value\r\n   */\r\n  Events.on('update', () => {\r\n    Direction.mount()\r\n  })\r\n\r\n  /**\r\n   * Apply direction class:\r\n   * - before building to apply class for the first time\r\n   * - on updating to reapply direction class that may changed\r\n   */\r\n  Events.on(['build.before', 'update'], () => {\r\n    Direction.addClass()\r\n  })\r\n\r\n  return Direction\r\n}\r\n","/**\r\n * Reflects value of glide movement.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nexport default function (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Negates the passed translate if glide is in RTL option.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify (translate) {\r\n      if (Components.Direction.is('rtl')) {\r\n        return -translate\r\n      }\r\n\r\n      return translate\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Updates glide movement with a `gap` settings.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nexport default function (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Modifies passed translate value with number in the `gap` settings.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify (translate) {\r\n      return translate + (Components.Gaps.value * Glide.index)\r\n    }\r\n  }\r\n}\r\n"," /**\r\n * Updates glide movement with width of additional clones width.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nexport default function (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Adds to the passed translate width of the half of clones.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify (translate) {\r\n      return translate + (Components.Clones.grow / 2)\r\n    }\r\n  }\r\n}\r\n","import { isObject } from '../../utils/unit'\r\n\r\n/**\r\n * Updates glide movement with a `peek` settings.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nexport default function (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Modifies passed translate value with a `peek` setting.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify (translate) {\r\n      if (Glide.settings.focusAt >= 0) {\r\n        let peek = Components.Peek.value\r\n\r\n        if (isObject(peek)) {\r\n          return translate - peek.before\r\n        }\r\n\r\n        return translate - peek\r\n      }\r\n\r\n      return translate\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Updates glide movement with a `focusAt` settings.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nexport default function (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Modifies passed translate value with index in the `focusAt` setting.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify (translate) {\r\n      let gap = Components.Gaps.value\r\n      let width = Components.Sizes.width\r\n      let focusAt = Glide.settings.focusAt\r\n      let slideWidth = Components.Sizes.slideWidth\r\n\r\n      if (focusAt === 'center') {\r\n        return translate - (width / 2 - slideWidth / 2)\r\n      }\r\n\r\n      return translate - (slideWidth * focusAt) - (gap * focusAt)\r\n    }\r\n  }\r\n}\r\n","import { warn } from '../utils/log'\r\nimport { isFunction } from '../utils/unit'\r\n\r\nimport Rtl from './transformers/rtl'\r\nimport Gap from './transformers/gap'\r\nimport Grow from './transformers/grow'\r\nimport Peeking from './transformers/peeking'\r\nimport Focusing from './transformers/focusing'\r\n\r\n/**\r\n * Applies diffrent transformers on translate value.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Merge instance transformers with collection of default transformers.\r\n   * It's important that the Rtl component be last on the list,\r\n   * so it reflects all previous transformations.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  let TRANSFORMERS = [\r\n    Gap,\r\n    Grow,\r\n    Peeking,\r\n    Focusing\r\n  ].concat(Glide._t, [Rtl])\r\n\r\n  return {\r\n    /**\r\n     * Piplines translate value with registered transformers.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    mutate (translate) {\r\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\r\n        let transformer = TRANSFORMERS[i]\r\n\r\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\r\n          translate = transformer(Glide, Components, Events).modify(translate)\r\n        } else {\r\n          warn('Transformer should be a function that returns an object with `modify()` method')\r\n        }\r\n      }\r\n\r\n      return translate\r\n    }\r\n  }\r\n}\r\n","import mutator from '../mutator/index'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  const Translate = {\r\n    /**\r\n     * Sets value of translate on HTML element.\r\n     *\r\n     * @param {Number} value\r\n     * @return {Void}\r\n     */\r\n    set (value) {\r\n      // Understand :: mutator.\r\n      let transform = mutator(Glide, Components).mutate(value)\r\n\r\n      Components.Html.wrapper.style.transform = `translate3d(${-1 * transform}px, 0px, 0px)`\r\n    },\r\n\r\n    /**\r\n     * Removes value of translate from HTML element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    remove () {\r\n      Components.Html.wrapper.style.transform = ''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set new translate value:\r\n   * - on move to reflect index change\r\n   * - on updating via API to reflect possible changes in options\r\n   */\r\n  Events.on('move', (context) => {\r\n    let gap = Components.Gaps.value\r\n    let length = Components.Sizes.length\r\n    let width = Components.Sizes.slideWidth\r\n\r\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\r\n      // understand where and what is after() coming from.\r\n      Components.Transition.after(() => {\r\n        Events.emit('translate.jump')\r\n\r\n        Translate.set(width * (length - 1))\r\n      })\r\n\r\n      return Translate.set(-width - (gap * length))\r\n    }\r\n\r\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\r\n      Components.Transition.after(() => {\r\n        Events.emit('translate.jump')\r\n\r\n        Translate.set(0)\r\n      })\r\n\r\n      return Translate.set((width * length) + (gap * length))\r\n    }\r\n\r\n    return Translate.set(context.movement)\r\n  })\r\n\r\n  /**\r\n   * Remove translate:\r\n   * - on destroying to bring markup to its inital state\r\n   */\r\n  Events.on('destroy', () => {\r\n    Translate.remove()\r\n  })\r\n\r\n  return Translate\r\n}\r\n","import { define } from '../utils/object'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Holds inactivity status of transition.\r\n   * When true transition is not applied.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  let disabled = false\r\n\r\n  const Transition = {\r\n    /**\r\n     * Composes string of the CSS transition.\r\n     *\r\n     * @param {String} property\r\n     * @return {String}\r\n     */\r\n    compose (property) {\r\n\r\n      console.log('mounted from transitions');\r\n\r\n      let settings = Glide.settings\r\n\r\n      if (!disabled) {\r\n        return `${property} ${this.duration}ms ${settings.animationTimingFunc}`\r\n      }\r\n\r\n      return `${property} 0ms ${settings.animationTimingFunc}`\r\n    },\r\n\r\n    /**\r\n     * Sets value of transition on HTML element.\r\n     *\r\n     * @param {String=} property\r\n     * @return {Void}\r\n     */\r\n    set (property = 'transform') {\r\n      Components.Html.wrapper.style.transition = this.compose(property)\r\n    },\r\n\r\n    /**\r\n     * Removes value of transition from HTML element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    remove () {\r\n      Components.Html.wrapper.style.transition = ''\r\n    },\r\n\r\n    /**\r\n     * Runs callback after animation.\r\n     *\r\n     * @param  {Function} callback\r\n     * @return {Void}\r\n     */\r\n    after (callback) {\r\n      setTimeout(() => {\r\n        callback()\r\n      }, this.duration)\r\n    },\r\n\r\n    /**\r\n     * Enable transition.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    enable () {\r\n      disabled = false\r\n\r\n      this.set()\r\n    },\r\n\r\n    /**\r\n     * Disable transition.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    disable () {\r\n      disabled = true\r\n\r\n      this.set()\r\n    }\r\n  }\r\n\r\n  define(Transition, 'duration', {\r\n    /**\r\n     * Gets duration of the transition based\r\n     * on currently running animation type.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      let settings = Glide.settings\r\n\r\n      if (Glide.isType('slider') && Components.Run.offset) {\r\n        return settings.rewindDuration\r\n      }\r\n\r\n      return settings.animationDuration\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Set transition `style` value:\r\n   * - on each moving, because it may be cleared by offset move\r\n   */\r\n  Events.on('move', () => {\r\n    Transition.set()\r\n  })\r\n\r\n  /**\r\n   * Disable transition:\r\n   * - before initial build to avoid transitioning from `0` to `startAt` index\r\n   * - while resizing window and recalculating dimentions\r\n   * - on jumping from offset transition at start and end edges in `carousel` type\r\n   */\r\n  Events.on(['build.before', 'resize', 'translate.jump'], () => {\r\n    Transition.disable()\r\n  })\r\n\r\n  /**\r\n   * Enable transition:\r\n   * - on each running, because it may be disabled by offset move\r\n   */\r\n  Events.on('run', () => {\r\n    Transition.enable()\r\n  })\r\n\r\n  /**\r\n   * Remove transition:\r\n   * - on destroying to bring markup to its inital state\r\n   */\r\n  Events.on('destroy', () => {\r\n    Transition.remove()\r\n  })\r\n\r\n  return Transition\r\n}\r\n","import { throttle } from '../utils/wait'\r\nimport { toInt, toFloat } from '../utils/unit'\r\n\r\nimport EventsBinder from '../core/event/events-binder'\r\n\r\nconst START_EVENTS = ['touchstart', 'mousedown']\r\nconst MOVE_EVENTS = ['touchmove', 'mousemove']\r\nconst END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave']\r\nconst MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave']\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  const Binder = new EventsBinder()\r\n\r\n  let swipeSin = 0\r\n  let swipeStartX = 0\r\n  let swipeStartY = 0\r\n  let disabled = false\r\n\r\n  const Swipe = {\r\n    /**\r\n     * Initializes swipe bindings.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n      console.log('mounted from swipe');\r\n      this.bindSwipeStart()\r\n    },\r\n\r\n    /**\r\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\r\n     *\r\n     * @param {Object} event\r\n     * @return {Void}\r\n     */\r\n    start (event) {\r\n      if (!disabled && !Glide.disabled) {\r\n        this.disable()\r\n\r\n        let swipe = this.touches(event)\r\n\r\n        swipeSin = null\r\n        swipeStartX = toInt(swipe.pageX)\r\n        swipeStartY = toInt(swipe.pageY)\r\n\r\n        this.bindSwipeMove()\r\n        this.bindSwipeEnd()\r\n\r\n        Events.emit('swipe.start')\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\r\n     *\r\n     * @param {Object} event\r\n     */\r\n    move (event) {\r\n      if (!Glide.disabled) {\r\n        let { touchAngle, touchRatio, classes } = Glide.settings\r\n\r\n        let swipe = this.touches(event)\r\n\r\n        let subExSx = toInt(swipe.pageX) - swipeStartX\r\n        let subEySy = toInt(swipe.pageY) - swipeStartY\r\n        let powEX = Math.abs(subExSx << 2)\r\n        let powEY = Math.abs(subEySy << 2)\r\n        let swipeHypotenuse = (powEX + powEY) * (powEX + powEY)\r\n        let swipeCathetus = powEY * powEY\r\n\r\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse)\r\n\r\n        Components.Move.make(subExSx * toFloat(touchRatio))\r\n\r\n        if (swipeSin * 180 / Math.PI < touchAngle) {\r\n          event.stopPropagation()\r\n\r\n          Components.Html.root.classList.add(classes.dragging)\r\n\r\n          Events.emit('swipe.move')\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\r\n     *\r\n     * @param {Object} event\r\n     * @return {Void}\r\n     */\r\n    end (event) {\r\n      if (!Glide.disabled) {\r\n        let settings = Glide.settings\r\n\r\n        let swipe = this.touches(event)\r\n        let threshold = this.threshold(event)\r\n\r\n        let swipeDistance = swipe.pageX - swipeStartX\r\n        let swipeDeg = swipeSin * 180 / Math.PI\r\n        let steps = Math.round(swipeDistance / Components.Sizes.slideWidth)\r\n\r\n        this.enable()\r\n\r\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\r\n          // While swipe is positive and greater than threshold move backward.\r\n          if (settings.perTouch) {\r\n            steps = Math.min(steps, toInt(settings.perTouch))\r\n          }\r\n\r\n          if (Components.Direction.is('rtl')) {\r\n            steps = -steps\r\n          }\r\n\r\n          Components.Run.make(Components.Direction.resolve(`<${steps}`))\r\n        } else if (\r\n          swipeDistance < -threshold &&\r\n          swipeDeg < settings.touchAngle\r\n        ) {\r\n          // While swipe is negative and lower than negative threshold move forward.\r\n          if (settings.perTouch) {\r\n            steps = Math.max(steps, -toInt(settings.perTouch))\r\n          }\r\n\r\n          if (Components.Direction.is('rtl')) {\r\n            steps = -steps\r\n          }\r\n\r\n          Components.Run.make(Components.Direction.resolve(`>${steps}`))\r\n        } else {\r\n          // While swipe don't reach distance apply previous transform.\r\n          Components.Move.make()\r\n        }\r\n\r\n        Components.Html.root.classList.remove(settings.classes.dragging)\r\n\r\n        this.unbindSwipeMove()\r\n        this.unbindSwipeEnd()\r\n\r\n        Events.emit('swipe.end')\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Binds swipe's starting event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bindSwipeStart () {\r\n      let settings = Glide.settings\r\n\r\n      if (settings.swipeThreshold) {\r\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, (event) => {\r\n          this.start(event)\r\n        })\r\n      }\r\n\r\n      if (settings.dragThreshold) {\r\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, (event) => {\r\n          this.start(event)\r\n        })\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Unbinds swipe's starting event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbindSwipeStart () {\r\n      Binder.off(START_EVENTS[0], Components.Html.wrapper)\r\n      Binder.off(START_EVENTS[1], Components.Html.wrapper)\r\n    },\r\n\r\n    /**\r\n     * Binds swipe's moving event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bindSwipeMove () {\r\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle((event) => {\r\n        this.move(event)\r\n      }, Glide.settings.throttle))\r\n    },\r\n\r\n    /**\r\n     * Unbinds swipe's moving event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbindSwipeMove () {\r\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper)\r\n    },\r\n\r\n    /**\r\n     * Binds swipe's ending event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bindSwipeEnd () {\r\n      Binder.on(END_EVENTS, Components.Html.wrapper, (event) => {\r\n        this.end(event)\r\n      })\r\n    },\r\n\r\n    /**\r\n     * Unbinds swipe's ending event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbindSwipeEnd () {\r\n      Binder.off(END_EVENTS, Components.Html.wrapper)\r\n    },\r\n\r\n    /**\r\n     * Normalizes event touches points accorting to different types.\r\n     *\r\n     * @param {Object} event\r\n     */\r\n    touches (event) {\r\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\r\n        return event\r\n      }\r\n\r\n      return event.touches[0] || event.changedTouches[0]\r\n    },\r\n\r\n    /**\r\n     * Gets value of minimum swipe distance settings based on event type.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    threshold (event) {\r\n      let settings = Glide.settings\r\n\r\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\r\n        return settings.dragThreshold\r\n      }\r\n\r\n      return settings.swipeThreshold\r\n    },\r\n\r\n    /**\r\n     * Enables swipe event.\r\n     *\r\n     * @return {self}\r\n     */\r\n    enable () {\r\n      disabled = false\r\n\r\n      Components.Transition.enable()\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Disables swipe event.\r\n     *\r\n     * @return {self}\r\n     */\r\n    disable () {\r\n      disabled = true\r\n\r\n      Components.Transition.disable()\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add component class:\r\n   * - after initial building\r\n   */\r\n  Events.on('build.after', () => {\r\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable)\r\n  })\r\n\r\n  Events.on('random' , () => {\r\n    console.log('danm');\r\n  });\r\n\r\n  /**\r\n   * Remove swiping bindings:\r\n   * - on destroying, to remove added EventListeners\r\n   */\r\n  Events.on('destroy', () => {\r\n    Swipe.unbindSwipeStart()\r\n    Swipe.unbindSwipeMove()\r\n    Swipe.unbindSwipeEnd()\r\n    Binder.destroy()\r\n  })\r\n\r\n  return Swipe\r\n}\r\n","import EventsBinder from '../core/event/events-binder'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  const Binder = new EventsBinder()\r\n\r\n  const Images = {\r\n    /**\r\n     * Binds listener to glide wrapper.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n      console.log('mounted from images');\r\n\r\n      this.bind()\r\n    },\r\n\r\n    /**\r\n     * Binds `dragstart` event on wrapper to prevent dragging images.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind () {\r\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart)\r\n    },\r\n\r\n    /**\r\n     * Unbinds `dragstart` event on wrapper.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbind () {\r\n      Binder.off('dragstart', Components.Html.wrapper)\r\n    },\r\n\r\n    /**\r\n     * Event handler. Prevents dragging.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    dragstart (event) {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove bindings from images:\r\n   * - on destroying, to remove added EventListeners\r\n   */\r\n  Events.on('destroy', () => {\r\n    Images.unbind()\r\n    Binder.destroy()\r\n  })\r\n\r\n  return Images\r\n}\r\n","import { define } from '../utils/object'\r\n\r\nimport EventsBinder from '../core/event/events-binder'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  const Binder = new EventsBinder()\r\n\r\n  /**\r\n   * Holds detaching status of anchors.\r\n   * Prevents detaching of already detached anchors.\r\n   *\r\n   * @private\r\n   * @type {Boolean}\r\n   */\r\n  let detached = false\r\n\r\n  /**\r\n   * Holds preventing status of anchors.\r\n   * If `true` redirection after click will be disabled.\r\n   *\r\n   * @private\r\n   * @type {Boolean}\r\n   */\r\n  let prevented = false\r\n\r\n  const Anchors = {\r\n    /**\r\n     * Setups a initial state of anchors component.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    mount () {\r\n\r\n      console.log('mounted from anchor');\r\n\r\n      /**\r\n       * Holds collection of anchors elements.\r\n       *\r\n       * @private\r\n       * @type {HTMLCollection}\r\n       */\r\n      this._a = Components.Html.wrapper.querySelectorAll('a')\r\n\r\n      this.bind()\r\n    },\r\n\r\n    /**\r\n     * Binds events to anchors inside a track.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind () {\r\n      Binder.on('click', Components.Html.wrapper, this.click)\r\n    },\r\n\r\n    /**\r\n     * Unbinds events attached to anchors inside a track.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbind () {\r\n      Binder.off('click', Components.Html.wrapper)\r\n    },\r\n\r\n    /**\r\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\r\n     *\r\n     * @param  {Object} event\r\n     * @return {Void}\r\n     */\r\n    click (event) {\r\n      event.stopPropagation()\r\n\r\n      if (prevented) {\r\n        event.preventDefault()\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Detaches anchors click event inside glide.\r\n     *\r\n     * @return {self}\r\n     */\r\n    detach () {\r\n      prevented = true\r\n\r\n      if (!detached) {\r\n        for (var i = 0; i < this.items.length; i++) {\r\n          this.items[i].draggable = false\r\n\r\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'))\r\n\r\n          this.items[i].removeAttribute('href')\r\n        }\r\n\r\n        detached = true\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Attaches anchors click events inside glide.\r\n     *\r\n     * @return {self}\r\n     */\r\n    attach () {\r\n      prevented = false\r\n\r\n      if (detached) {\r\n        for (var i = 0; i < this.items.length; i++) {\r\n          this.items[i].draggable = true\r\n\r\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'))\r\n        }\r\n\r\n        detached = false\r\n      }\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  define(Anchors, 'items', {\r\n    /**\r\n     * Gets collection of the arrows HTML elements.\r\n     *\r\n     * @return {HTMLElement[]}\r\n     */\r\n    get () {\r\n      return Anchors._a\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Detach anchors inside slides:\r\n   * - on swiping, so they won't redirect to its `href` attributes\r\n   */\r\n  Events.on('swipe.move', () => {\r\n    Anchors.detach()\r\n  })\r\n\r\n  /**\r\n   * Attach anchors inside slides:\r\n   * - after swiping and transitions ends, so they can redirect after click again\r\n   */\r\n  Events.on('swipe.end', () => {\r\n    Components.Transition.after(() => {\r\n      Anchors.attach()\r\n    })\r\n  })\r\n\r\n  /**\r\n   * Unbind anchors inside slides:\r\n   * - on destroying, to bring anchors to its initial state\r\n   */\r\n  Events.on('destroy', () => {\r\n    Anchors.attach()\r\n    Anchors.unbind()\r\n    Binder.destroy()\r\n  })\r\n\r\n  return Anchors\r\n}\r\n","import { siblings } from '../utils/dom'\r\nimport { define } from '../utils/object'\r\n\r\nimport EventsBinder from '../core/event/events-binder'\r\n\r\nconst NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]'\r\nconst CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  const Binder = new EventsBinder()\r\n\r\n  const Controls = {\r\n    /**\r\n     * Inits arrows. Binds events listeners\r\n     * to the arrows HTML elements.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n\r\n      console.log('mounted from controls');\r\n\r\n      /**\r\n       * Collection of navigation HTML elements.\r\n       *\r\n       * @private\r\n       * @type {HTMLCollection}\r\n       */\r\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR)\r\n\r\n      /**\r\n       * Collection of controls HTML elements.\r\n       *\r\n       * @private\r\n       * @type {HTMLCollection}\r\n       */\r\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR)\r\n\r\n      this.addBindings()\r\n    },\r\n\r\n    /**\r\n     * Sets active class to current slide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    setActive () {\r\n      for (let i = 0; i < this._n.length; i++) {\r\n        this.addClass(this._n[i].children)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes active class to current slide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    removeActive () {\r\n      for (let i = 0; i < this._n.length; i++) {\r\n        this.removeClass(this._n[i].children)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Toggles active class on items inside navigation.\r\n     *\r\n     * @param  {HTMLElement} controls\r\n     * @return {Void}\r\n     */\r\n    addClass (controls) {\r\n      let settings = Glide.settings\r\n      let item = controls[Glide.index]\r\n\r\n      item.classList.add(settings.classes.activeNav)\r\n\r\n      siblings(item).forEach(sibling => {\r\n        sibling.classList.remove(settings.classes.activeNav)\r\n      })\r\n    },\r\n\r\n    /**\r\n     * Removes active class from active control.\r\n     *\r\n     * @param  {HTMLElement} controls\r\n     * @return {Void}\r\n     */\r\n    removeClass (controls) {\r\n      controls[Glide.index].classList.remove(Glide.settings.classes.activeNav)\r\n    },\r\n\r\n    /**\r\n     * Adds handles to the each group of controls.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    addBindings () {\r\n      for (let i = 0; i < this._c.length; i++) {\r\n        this.bind(this._c[i].children)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes handles from the each group of controls.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    removeBindings () {\r\n      for (let i = 0; i < this._c.length; i++) {\r\n        this.unbind(this._c[i].children)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Binds events to arrows HTML elements.\r\n     *\r\n     * @param {HTMLCollection} elements\r\n     * @return {Void}\r\n     */\r\n    bind (elements) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        Binder.on(['click', 'touchstart'], elements[i], this.click)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Unbinds events binded to the arrows HTML elements.\r\n     *\r\n     * @param {HTMLCollection} elements\r\n     * @return {Void}\r\n     */\r\n    unbind (elements) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        Binder.off(['click', 'touchstart'], elements[i])\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handles `click` event on the arrows HTML elements.\r\n     * Moves slider in driection precised in\r\n     * `data-glide-dir` attribute.\r\n     *\r\n     * @param {Object} event\r\n     * @return {Void}\r\n     */\r\n    click (event) {\r\n      event.preventDefault()\r\n      // UNDERSTAND Component.run\r\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')))\r\n    }\r\n  }\r\n\r\n  define(Controls, 'items', {\r\n    /**\r\n     * Gets collection of the controls HTML elements.\r\n     *\r\n     * @return {HTMLElement[]}\r\n     */\r\n    get () {\r\n      return Controls._c\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Swap active class of current navigation item:\r\n   * - after mounting to set it to initial index\r\n   * - after each move to the new index\r\n   */\r\n  Events.on(['mount.after', 'move.after'], () => {\r\n    Controls.setActive()\r\n  })\r\n\r\n  /**\r\n   * Remove bindings and HTML Classes:\r\n   * - on destroying, to bring markup to its initial state\r\n   */\r\n  Events.on('destroy', () => {\r\n    Controls.removeBindings()\r\n    Controls.removeActive()\r\n    Binder.destroy()\r\n  })\r\n\r\n  return Controls\r\n}\r\n","import EventsBinder from '../core/event/events-binder'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  const Binder = new EventsBinder()\r\n\r\n  const Keyboard = {\r\n    /**\r\n     * Binds keyboard events on component mount.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n\r\n      console.log('mounted from keyboard');\r\n\r\n      if (Glide.settings.keyboard) {\r\n        this.bind()\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Adds keyboard press events.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind () {\r\n      Binder.on('keyup', document, this.press)\r\n    },\r\n\r\n    /**\r\n     * Removes keyboard press events.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbind () {\r\n      Binder.off('keyup', document)\r\n    },\r\n\r\n    /**\r\n     * Handles keyboard's arrows press and moving glide foward and backward.\r\n     *\r\n     * @param  {Object} event\r\n     * @return {Void}\r\n     */\r\n    press (event) {\r\n      if (event.keyCode === 39) {\r\n        Components.Run.make(Components.Direction.resolve('>'))\r\n      }\r\n\r\n      if (event.keyCode === 37) {\r\n        Components.Run.make(Components.Direction.resolve('<'))\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove bindings from keyboard:\r\n   * - on destroying to remove added events\r\n   * - on updating to remove events before remounting\r\n   */\r\n  Events.on(['destroy', 'update'], () => {\r\n    Keyboard.unbind()\r\n  })\r\n\r\n  /**\r\n   * Remount component\r\n   * - on updating to reflect potential changes in settings\r\n   */\r\n  Events.on('update', () => {\r\n    Keyboard.mount()\r\n  })\r\n\r\n  /**\r\n   * Destroy binder:\r\n   * - on destroying to remove listeners\r\n   */\r\n  Events.on('destroy', () => {\r\n    Binder.destroy()\r\n  })\r\n\r\n  return Keyboard\r\n}\r\n","import { define } from '../utils/object'\r\nimport { toInt, isUndefined } from '../utils/unit'\r\n\r\nimport EventsBinder from '../core/event/events-binder'\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  const Binder = new EventsBinder()\r\n\r\n  const Autoplay = {\r\n    /**\r\n     * Initializes autoplaying and events.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount () {\r\n      console.log('mounted from autoplay');\r\n\r\n      this.start()\r\n\r\n      if (Glide.settings.hoverpause) {\r\n        this.bind()\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Starts autoplaying in configured interval.\r\n     *\r\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Void}\r\n     */\r\n    start () {\r\n      if (Glide.settings.autoplay) {\r\n        if (isUndefined(this._i)) {\r\n          this._i = setInterval(() => {\r\n            this.stop()\r\n\r\n            Components.Run.make('>')\r\n\r\n            this.start()\r\n          }, this.time)\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Stops autorunning of the glide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    stop () {\r\n      this._i = clearInterval(this._i)\r\n    },\r\n\r\n    /**\r\n     * Stops autoplaying while mouse is over glide's area.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind () {\r\n      Binder.on('mouseover', Components.Html.root, () => {\r\n        this.stop()\r\n      })\r\n\r\n      Binder.on('mouseout', Components.Html.root, () => {\r\n        this.start()\r\n      })\r\n    },\r\n\r\n    /**\r\n     * Unbind mouseover events.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    unbind () {\r\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root)\r\n    }\r\n  }\r\n\r\n  define(Autoplay, 'time', {\r\n    /**\r\n     * Gets time period value for the autoplay interval. Prioritizes\r\n     * times in `data-glide-autoplay` attrubutes over options.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get () {\r\n      let autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay')\r\n\r\n      if (autoplay) {\r\n        return toInt(autoplay)\r\n      }\r\n\r\n      return toInt(Glide.settings.autoplay)\r\n    }\r\n  })\r\n\r\n  /**\r\n   * Stop autoplaying and unbind events:\r\n   * - on destroying, to clear defined interval\r\n   * - on updating via API to reset interval that may changed\r\n   */\r\n  Events.on(['destroy', 'update'], () => {\r\n    Autoplay.unbind()\r\n  })\r\n\r\n  /**\r\n   * Stop autoplaying:\r\n   * - before each run, to restart autoplaying\r\n   * - on pausing via API\r\n   * - on destroying, to clear defined interval\r\n   * - while starting a swipe\r\n   * - on updating via API to reset interval that may changed\r\n   */\r\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], () => {\r\n    Autoplay.stop()\r\n  })\r\n\r\n  /**\r\n   * Start autoplaying:\r\n   * - after each run, to restart autoplaying\r\n   * - on playing via API\r\n   * - while ending a swipe\r\n   */\r\n  Events.on(['run.after', 'play', 'swipe.end'], () => {\r\n    Autoplay.start()\r\n  })\r\n\r\n  /**\r\n   * Remount autoplaying:\r\n   * - on updating via API to reset interval that may changed\r\n   */\r\n  Events.on('update', () => {\r\n    Autoplay.mount()\r\n  })\r\n\r\n  /**\r\n   * Destroy a binder:\r\n   * - on destroying glide instance to clearup listeners\r\n   */\r\n  Events.on('destroy', () => {\r\n    Binder.destroy()\r\n  })\r\n\r\n  return Autoplay\r\n}\r\n","import { warn } from '../utils/log'\r\nimport { throttle } from '../utils/wait'\r\nimport { isObject } from '../utils/unit'\r\nimport { sortKeys, mergeOptions } from '../utils/object'\r\n\r\nimport EventsBinder from '../core/event/events-binder'\r\n\r\n/**\r\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\r\n *\r\n * @param {Object} points\r\n * @returns {Object}\r\n */\r\nfunction sortBreakpoints (points) {\r\n  if (isObject(points)) {\r\n    return sortKeys(points)\r\n  } else {\r\n    warn(`Breakpoints option must be an object`)\r\n  }\r\n\r\n  return {}\r\n}\r\n\r\nexport default function (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n\r\n  console.log('mounted from breakpoints');\r\n\r\n  const Binder = new EventsBinder()\r\n\r\n  /**\r\n   * Holds reference to settings.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  let settings = Glide.settings\r\n\r\n  /**\r\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\r\n   * from smaller to larger. It is required in order to proper\r\n   * matching currently active breakpoint settings.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  let points = sortBreakpoints(settings.breakpoints)\r\n\r\n  /**\r\n   * Cache initial settings before overwritting.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  let defaults = Object.assign({}, settings)\r\n\r\n  const Breakpoints = {\r\n    /**\r\n     * Matches settings for currectly matching media breakpoint.\r\n     *\r\n     * @param {Object} points\r\n     * @returns {Object}\r\n     */\r\n    match (points) {\r\n      if (typeof window.matchMedia !== 'undefined') {\r\n        for (let point in points) {\r\n          if (points.hasOwnProperty(point)) {\r\n            if (window.matchMedia(`(max-width: ${point}px)`).matches) {\r\n              return points[point]\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return defaults\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Overwrite instance settings with currently matching breakpoint settings.\r\n   * This happens right after component initialization.\r\n   */\r\n  Object.assign(settings, Breakpoints.match(points))\r\n\r\n  /**\r\n   * Update glide with settings of matched brekpoint:\r\n   * - window resize to update slider\r\n   */\r\n  Binder.on('resize', window, throttle(() => {\r\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points))\r\n  }, Glide.settings.throttle))\r\n\r\n  /**\r\n   * Resort and update default settings:\r\n   * - on reinit via API, so breakpoint matching will be performed with options\r\n   */\r\n  Events.on('update', () => {\r\n    points = sortBreakpoints(points)\r\n\r\n    defaults = Object.assign({}, settings)\r\n  })\r\n\r\n  /**\r\n   * Unbind resize listener:\r\n   * - on destroying, to bring markup to its initial state\r\n   */\r\n  Events.on('destroy', () => {\r\n    Binder.off('resize', window)\r\n  })\r\n\r\n  return Breakpoints\r\n}\r\n","import Core from '../src/index'\r\n\r\n// Required components\r\nimport Run from '../src/components/run'\r\nimport Gaps from '../src/components/gaps'\r\nimport Html from '../src/components/html'\r\nimport Peek from '../src/components/peek'\r\nimport Move from '../src/components/move'\r\nimport Sizes from '../src/components/sizes'\r\nimport Build from '../src/components/build'\r\nimport Clones from '../src/components/clones'\r\nimport Resize from '../src/components/resize'\r\nimport Direction from '../src/components/direction'\r\nimport Translate from '../src/components/translate'\r\nimport Transition from '../src/components/transition'\r\n\r\n// Optional components\r\nimport Swipe from '../src/components/swipe'\r\nimport Images from '../src/components/images'\r\nimport Anchors from '../src/components/anchors'\r\nimport Controls from '../src/components/controls'\r\nimport Keyboard from '../src/components/keyboard'\r\nimport Autoplay from '../src/components/autoplay'\r\nimport Breakpoints from '../src/components/breakpoints'\r\n\r\nconst COMPONENTS = {\r\n  // Required\r\n  Html,\r\n  Translate,\r\n  Transition,\r\n  Direction,\r\n  Peek,\r\n  Sizes,\r\n  Gaps,\r\n  Move,\r\n  Clones,\r\n  Resize,\r\n  Build,\r\n  Run,\r\n\r\n  // Optional\r\n  Swipe,\r\n  Images,\r\n  Anchors,\r\n  Controls,\r\n  Keyboard,\r\n  Autoplay,\r\n  Breakpoints\r\n}\r\n\r\nexport default class Glide extends Core {\r\n  mount (extensions = {}) {\r\n    return super.mount(Object.assign({}, COMPONENTS, extensions))\r\n  }\r\n}\r\n"],"names":["warn","msg","error","toInt","value","parseInt","toFloat","parseFloat","isString","isObject","type","isNumber","isFunction","isUndefined","isArray","constructor","Array","mount","glide","extensions","events","components","name","define","obj","prop","definition","defineProperty","sortKeys","Object","keys","sort","reduce","r","k","mergeOptions","defaults","settings","options","babelHelpers.extends","hasOwnProperty","classes","direction","breakpoints","EventsBus","hop","event","handler","i","length","on","call","index","push","context","emit","forEach","item","Glide","selector","_c","_t","_e","disabled","startAt","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","autoplay","_o","o","_i","_d","status","Components","Events","log","move","calculate","after","isOffset","enable","steps","countableSteps","isEnd","isType","rewind","Math","min","isStart","_m","substr","Html","slides","perView","focusAt","bound","now","Date","getTime","throttle","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","arguments","trailing","setTimeout","cancel","MARGIN_TYPE","Gaps","len","style","Direction","marginLeft","marginRight","gap","Sizes","wrapper","children","remove","siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","TRACK_SELECTOR","root","track","querySelector","prototype","slice","filter","slide","classList","contains","cloneSlide","_r","document","t","Peek","peek","_v","before","offset","slideWidth","translate","is","width","dimention","wrapperSize","offsetWidth","grow","Clones","reductor","setupSlides","setupWrapper","Build","typeClass","activeClass","add","activeSlide","sibling","removeClasses","items","collect","start","end","max","floor","clone","cloneNode","unshift","half","prepend","reverse","append","appendChild","insertBefore","removeChild","EventsBinder","listeners","el","closure","capture","addEventListener","removeEventListener","Binder","Resize","bind","off","unbind","destroy","VALID_DIRECTIONS","FLIPED_MOVEMENTS","token","split","join","indexOf","removeClass","addClass","TRANSFORMERS","Gap","Grow","Peeking","Focusing","concat","Rtl","transformer","modify","Translate","transform","mutator","mutate","set","movement","property","duration","animationTimingFunc","transition","compose","callback","rewindDuration","animationDuration","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","swipeSin","swipeStartX","swipeStartY","Swipe","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","touchAngle","touchRatio","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","swipeCathetus","asin","PI","stopPropagation","dragging","threshold","swipeDistance","swipeDeg","round","perTouch","resolve","unbindSwipeMove","unbindSwipeEnd","swipeThreshold","dragThreshold","changedTouches","swipeable","unbindSwipeStart","Images","dragstart","preventDefault","detached","prevented","Anchors","_a","querySelectorAll","click","draggable","setAttribute","getAttribute","removeAttribute","detach","attach","NAV_SELECTOR","CONTROLS_SELECTOR","Controls","_n","addBindings","controls","activeNav","elements","currentTarget","setActive","removeBindings","removeActive","Keyboard","keyboard","press","keyCode","Autoplay","hoverpause","setInterval","stop","time","clearInterval","sortBreakpoints","points","Breakpoints","matchMedia","point","matches","match","COMPONENTS","Core"],"mappings":"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"}